name: Build and Publish Workflow

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'

jobs:
  detect-bump:
    name: Detect Version Bump
    runs-on: ubuntu-latest
    outputs:
      is_bump: ${{ steps.check.outputs.is_bump }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - id: check
        name: Check if commit is version bump
        run: |
          last_commit_message=$(git log -1 --pretty=%B)
          echo "Last commit message: $last_commit_message"

          if [[ "$last_commit_message" =~ "[Release]: Bump version" ]]; then
            echo "is_bump=true" >> $GITHUB_OUTPUT
          else
            echo "is_bump=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: detect-bump
    if: needs.detect-bump.outputs.is_bump != 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: https://npm.pkg.github.com/celonis
          scope: '@celonis'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Done
        run: echo "Build finished"

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: detect-bump
    if: needs.detect-bump.outputs.is_bump == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node (GitHub Registry)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: https://npm.pkg.github.com/celonis
          scope: '@celonis'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Prepare dist folder
        run: |
          cp README.md dist/README.md
          cp LICENSE dist/LICENSE

      - name: Publish to GitHub Registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Publishing to GitHub Registry..."
          cd dist/
          npm publish

      - name: Setup Node for NPM Registry
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: https://registry.npmjs.org/
          scope: '@celonis'

      - name: Publish to NPM Registry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing to npm Registry..."
          cd dist/
          npm publish --access public

      - name: Done
        run: echo "Version bump detected â€” published successfully."
